<UserControl x:Class="OngekiFumenEditor.Modules.FumenEditorSelectingObjectViewer.Views.SelectionFilterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:cal="http://caliburnmicro.com"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:markup="clr-namespace:OngekiFumenEditor.UI.Markup"
             xmlns:controls="http://schemas.timjones.io/gemini"
             xmlns:vm="clr-namespace:OngekiFumenEditor.Modules.FumenEditorSelectingObjectViewer.ViewModels"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:selectionFilter="clr-namespace:OngekiFumenEditor.Modules.FumenEditorSelectingObjectViewer.Base.SelectionFilter"
             xmlns:valueConverters="clr-namespace:OngekiFumenEditor.Modules.FumenEditorSelectingObjectViewer.ValueConverters"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:OngekiFumenEditor.UI.Behaviors"
             mc:Ignorable="d"
             Padding="3"
             Background="Transparent"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=vm:SelectionFilterViewModel}">
    <UserControl.Resources>
        <vm:WideModeToVisibilityConverter x:Key="WideModeToVisibilityConverter" />
        <vm:WideModeToVisibilityConverter x:Key="InverseWideModeToVisibilityConverter" IsInverse="true" />
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>

        <!-- STYLES -->
        <Style x:Key="WrappedTextCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="5 0" />
        </Style>

        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="4 0" />
        </Style>

        <Style TargetType="xctk:CheckListBox" BasedOn="{StaticResource {x:Type xctk:CheckListBox}}">
            <Setter Property="Background" Value="{DynamicResource TreeView.Static.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TreeView.Static.Border}" />
        </Style>

        <Style TargetType="xctk:WatermarkTextBox" BasedOn="{StaticResource {x:Type xctk:WatermarkTextBox}}" />

        <!-- FILTER OPTIONS -->

        <DataTemplate DataType="{x:Type selectionFilter:BooleanOption}">
            <WrapPanel Margin="3 5">
                <CheckBox IsChecked="{Binding IsEnabled, Mode=TwoWay}" Content="{Binding Text}" />
                <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsEnabled}">
                    <RadioButton
                        IsChecked="{Binding Value, Converter={StaticResource ParamValueToBoolConverter}, ConverterParameter={StaticResource True}, Mode=TwoWay}"
                        Content="{Binding TrueText}" />
                    <Label Content="{Binding TrueMatches, Converter={StaticResource ParenthesizeTextConverter}}" FontStyle="Italic"/>
                    <RadioButton
                        IsChecked="{Binding Value, Converter={StaticResource ParamValueToBoolConverter}, ConverterParameter={StaticResource False}, Mode=TwoWay}"
                        Content="{Binding FalseText}" />
                    <Label Content="{Binding FalseMatches, Converter={StaticResource ParenthesizeTextConverter}}" FontStyle="Italic"/>
                </StackPanel>
            </WrapPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type selectionFilter:TextWithRegexOption}">
            <Grid Margin="3 5">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding IsEnabled, Mode=TwoWay}" Content="{Binding Text}" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding InputText, Mode=TwoWay}" IsEnabled="{Binding IsEnabled}" />
                <CheckBox Grid.Row="0" Grid.Column="2" IsChecked="{Binding IsRegex, Mode=TwoWay}" IsEnabled="{Binding IsEnabled}"
                          Content="{markup:Translate [SelectionFilter_OptionLabelTagRegex]}" />
                <Label Grid.Row="1" Grid.Column="1"
                           Content="{Binding MatchCount, Converter={StaticResource ParenthesizeTextConverter}}"
                           FontStyle="Italic" VerticalContentAlignment="Center"
                           Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type selectionFilter:EnumSpecificationOption}">
            <Grid Margin="3 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" MaxWidth="200" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0"
                          IsChecked="{Binding IsEnabled, Mode=TwoWay}" Content="{Binding Text}" />
                <ComboBox Grid.Column="1"
                          SelectedValue="{Binding Value, Mode=TwoWay}"
                          ItemsSource="{Binding SelectionsText}"
                          DisplayMemberPath="Value"
                          SelectedValuePath="Key"
                          Width="200"
                          HorizontalAlignment="Left"
                          IsEnabled="{Binding IsEnabled}" />
                <Label Grid.Column="2"
                       Content="{Binding SelectedOptionMatchCount, Converter={StaticResource ParenthesizeTextConverter}}"
                       FontStyle="Italic" VerticalContentAlignment="Center"
                       Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type selectionFilter:BulletPaletteFilterOption}">
            <StackPanel Orientation="Horizontal" Margin="3 5">
                <CheckBox IsChecked="{Binding IsEnabled, Mode=TwoWay}" Content="{Binding Text}" />
                <xctk:CheckComboBox ItemsSource="{Binding Items}"
                                    SelectedMemberPath="IsSelected"
                                    DisplayMemberPath="Text"
                                    IsEnabled="{Binding IsEnabled}"
                                    Width="200"
                                    IsSelectAllActive="True"
                                    Closed="BulletPaletteCheckList_SetText"
                                    Loaded="BulletPaletteCheckList_SetText"
                                    ItemSelectionChanged="BulletPaletteCheckList_SetText" />
                <Label Content="{Binding FilterMatches, Converter={StaticResource ParenthesizeTextConverter}}"
                       Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                       FontStyle="Italic" VerticalContentAlignment="Center" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type selectionFilter:DockableObjectLaneFilterOption}">
            <StackPanel Orientation="Horizontal" Margin="3 5">
                <CheckBox IsChecked="{Binding IsEnabled, Mode=TwoWay}" Content="{Binding Text}" />
                <xctk:CheckComboBox ItemsSource="{Binding Values}"
                                    SelectedMemberPath="IsSelected"
                                    DisplayMemberPath="Text"
                                    ValueMemberPath="DockLane"
                                    Width="250"
                                    HorizontalAlignment="Left"
                                    IsSelectAllActive="True"
                                    IsEnabled="{Binding IsEnabled}" />
                <Label Content="{Binding FilterMatches, Converter={StaticResource ParenthesizeTextConverter}}"
                       Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                       FontStyle="Italic" VerticalContentAlignment="Center" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <!-- PAGE LAYOUT -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0">
            <StackPanel Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{markup:Translate [SelectionFilter_HeaderObjectType]}" />
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Button Content="{markup:Translate [SelectionFilter_ActionLabelSelectAll]}"
                                cal:Message.Attach="FilterObjectTypesSelectAll()" />
                        <Button Content="{markup:Translate [SelectionFilter_ActionLabelResetSelection]}"
                                cal:Message.Attach="FilterObjectTypesReset()" />
                    </StackPanel>
                </Grid>

                <ItemsControl ItemsSource="{Binding FilterTypeCategories}"
                              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Panel}, Path=ActualWidth, Converter={StaticResource InverseWideModeToVisibilityConverter}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type selectionFilter:FilterObjectTypeCategory}">
                            <controls:ExpanderEx Header="{Binding CategoryNameDisplayCheckCount}">
                                <xctk:CheckListBox ItemsSource="{Binding Items}"
                                                   HorizontalContentAlignment="Stretch"
                                                   Height="Auto"
                                                   IsSelectAllActive="True"
                                                   DisplayMemberPath="Display"
                                                   SelectedMemberPath="IsSelected"
                                                   SelectAllContent="{Binding CategoryNameDisplay}">
                                    <b:Interaction.Behaviors>
                                        <behaviors:BubbleScrollWheelEventBehavior />
                                    </b:Interaction.Behaviors>
                                </xctk:CheckListBox>
                            </controls:ExpanderEx>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding FilterTypeCategories}"
                              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Panel}, Path=ActualWidth, Converter={StaticResource WideModeToVisibilityConverter}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type selectionFilter:FilterObjectTypeCategory}">
                            <xctk:CheckListBox ItemsSource="{Binding Items}"
                                               HorizontalContentAlignment="Stretch"
                                               Height="Auto"
                                               IsSelectAllActive="True"
                                               DisplayMemberPath="Display"
                                               SelectedMemberPath="IsSelected"
                                               SelectAllContent="{Binding CategoryNameDisplay}">
                                <b:Interaction.Behaviors>
                                    <behaviors:BubbleScrollWheelEventBehavior />
                                </b:Interaction.Behaviors>
                            </xctk:CheckListBox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{markup:Translate [SelectionFilter_HeaderOptions]}" />
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Button Content="{markup:Translate [SelectionFilter_ActionLabelResetSelection]}"
                                cal:Message.Attach="FilterOptionsReset()" />
                    </StackPanel>
                </Grid>

                <ItemsControl ItemsSource="{Binding OptionCategories}"
                              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Panel}, Path=ActualWidth, Converter={StaticResource InverseWideModeToVisibilityConverter}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type selectionFilter:OptionCategory}">
                            <controls:ExpanderEx Header="{Binding DisplayName}">
                                <StackPanel Orientation="Vertical">
                                    <ItemsControl ItemsSource="{Binding Options}" />
                                </StackPanel>
                            </controls:ExpanderEx>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <TabControl ItemsSource="{Binding OptionCategories}"
                            Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Panel}, Path=ActualWidth, Converter={StaticResource WideModeToVisibilityConverter}}">
                    <TabControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type selectionFilter:OptionCategory}">
                            <TextBlock Text="{Binding DisplayName}" />
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type selectionFilter:OptionCategory}">
                            <StackPanel Orientation="Vertical">
                                <ItemsControl ItemsSource="{Binding Options}" />
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </StackPanel>
        </ScrollViewer>

        <StackPanel Grid.Row="1">
            <Separator />

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5">
                <CheckBox Content="{markup:Translate [SelectionFilter_OptionLabelInvertFilter]}"
                          Style="{StaticResource WrappedTextCheckBox}"
                          IsChecked="{Binding IsInvertFilter, Mode=TwoWay}"
                          ToolTip="{markup:Translate [SelectionFilter_OptionLabelInvertFilterTooltip]}"
                          ToolTipService.InitialShowDelay="100" />
            </StackPanel>

            <TextBlock Text="{Binding FilterOutcomeText}" Margin="5" />

            <StackPanel Orientation="Horizontal" Margin="5">
                <Button cal:Message.Attach="ApplyFilterToSelection()">Apply</Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>