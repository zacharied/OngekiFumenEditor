<UserControl
    x:Class="OngekiFumenEditor.Modules.FumenVisualEditor.Views.FumenVisualEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://caliburnmicro.com"
    xmlns:common="clr-namespace:Gemini.Framework.Services;assembly=Gemini"
    xmlns:controls="clr-namespace:OngekiFumenEditor.UI.Controls"
    xmlns:controls1="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.Views.UI"
    xmlns:converters="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:markup="clr-namespace:OngekiFumenEditor.UI.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:opentkcontrol="clr-namespace:OpenTK.Wpf;assembly=GLWpfControl"
    xmlns:res="clr-namespace:OngekiFumenEditor.Properties"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:valueconverters="clr-namespace:OngekiFumenEditor.UI.ValueConverters"
    xmlns:viewmodels="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.ViewModels"
    cal:Message.Attach="[Key OemTilde] = [Action KeyboardAction_FastPlaceDockableObjectToWallLeft]; [Key D4] = [Action KeyboardAction_FastPlaceDockableObjectToWallRight]; [Key D3] = [Action KeyboardAction_FastPlaceDockableObjectToRight]; [Key D2] = [Action KeyboardAction_FastPlaceDockableObjectToCenter]; [Key D1] = [Action KeyboardAction_FastPlaceDockableObjectToLeft]; [Event DragEnter] = [Action Grid_DragEnter($executionContext)];     [Event Drop] = [Action Grid_Drop($executionContext)];     [Event FocusableChanged] = [Action OnFocusableChanged($executionContext)];     [Key Delete] = [Action KeyboardAction_DeleteSelectingObjects];     [Gesture Ctrl+A] = [Action KeyboardAction_SelectAllObjects];     [Key Escape] = [Action KeyboardAction_CancelSelectingObjects];   [Key C] = [Action KeyboardAction_FastSetObjectIsCritical($executionContext)];   [Key Q] = [Action KeyboardAction_HideOrShow];[Key A] = [Action KeyboardAction_FastAddConnectableChild($executionContext)]; [Key F] = [Action KeyboardAction_FastSwitchFlickDirection($executionContext)]; [Gesture Ctrl+C]=[Action MenuItemAction_CopySelectedObjects]; [Gesture Ctrl+V]=[Action MenuItemAction_PasteCopiesObjects];    "
    d:DataContext="{d:DesignInstance Type=viewmodels:FumenVisualEditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    AllowDrop="True"
    Background="#101010"
    Focusable="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:UnitCloseSizeConverter x:Key="UnitCloseSizeConverter" />
            <converters:JudgeLineConverter x:Key="JudgeLineConverter" />
            <converters:BeatRhythmToBrushConverter x:Key="BeatRhythmToBrushConverter" />
            <converters:TGridDisplayConverter x:Key="TGridDisplayConverter">
            </converters:TGridDisplayConverter>
            <converters:ReverseDoubleConverter x:Key="ReverseDoubleConverter" />
            <converters:BeatRhythmToVisibleConverter x:Key="BeatRhythmToVisibleConverter" />
            <valueconverters:ReverseBoolConverter x:Key="ReverseBoolConverter" />
            <converters:BoolToScrollBarVisibleConverter x:Key="BoolToScrollBarVisibleConverter" />
            <converters:IsStringEmptyConverter x:Key="IsStringEmptyConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Focusable="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ContextMenu>
            <ContextMenu x:Name="EditorContextMenu">
                <MenuItem Header="{markup:Translate [MenuSelecting]}">
                    <MenuItem cal:Message.Attach="MenuItemAction_SelectAll()" Header="{markup:Translate [SelectAllObjects]}" />
                    <MenuItem cal:Message.Attach="MenuItemAction_ReverseSelect()" Header="{markup:Translate [ReverseSelectAllObjects]}" />
                </MenuItem>
                <MenuItem Header="{markup:Translate [ToSelectedObjects]}">
                    <MenuItem cal:Message.Attach="KeyboardAction_DeleteSelectingObjects()" Header="{markup:Translate [Delete]}" />
                    <MenuItem cal:Message.Attach="MenuItemAction_CopySelectedObjects()" Header="{markup:Translate [CopyCopiable]}" />
                    <MenuItem Header="{markup:Translate [ControlTimeline]}">
                        <MenuItem cal:Message.Attach="MenuItemAction_RememberSelectedObjectAudioTime()" Header="{markup:Translate [RememberAudioTime]}" />
                        <MenuItem cal:Message.Attach="MenuItemAction_RecoverySelectedObjectToAudioTime()" Header="{markup:Translate [RecoveryAudioTime]}" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{markup:Translate [ToCopiedObjects]}">
                    <MenuItem Header="{markup:Translate [ToPaste]}">
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsDirectly($executionContext)" Header="{markup:Translate [PasteDirectly]}" />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjects($executionContext)" Header="{markup:Translate [PasteToMouse]}" />
                        <Separator />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsAsSelectedRangeCenterXGridMirror($executionContext)" Header="{markup:Translate [PasteForHorizonMirror]}" />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsAsSelectedRangeCenterTGridMirror($executionContext)" Header="{markup:Translate [PasteForVerticalMirror]}" />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsAsXGridZeroMirror($executionContext)" Header="{markup:Translate [PasteForZeroXGridMirror]}" />
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem
                    Header="{markup:Translate [ShowFPS]}"
                    IsCheckable="True"
                    IsChecked="{Binding IsDisplayFPS}" />
            </ContextMenu>
        </Grid.ContextMenu>
        <opentkcontrol:GLWpfControl
            x:Name="glView"
            cal:Message.Attach="             [Event MouseWheel]=[Action OnMouseWheel($executionContext)];             [Event SizeChanged] = [Action OnSizeChanged($executionContext)];             [Event Loaded] = [Action OnLoaded($executionContext)];             [Event PreviewMouseDown] = [Action OnMouseDown($executionContext)];             [Event MouseMove] = [Action OnMouseMove($executionContext)];             [Event PreviewMouseUp] = [Action OnMouseUp($executionContext)];             [Event MouseLeave] = [Action OnMouseLeave($executionContext)];"
            Ready="glView_Ready"
            SizeChanged="glView_SizeChanged" />
        <TextBlock
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontWeight="Bold"
            Foreground="White"
            IsHitTestVisible="False"
            Opacity="0.25"
            Text="{Binding DisplayFPS}"
            Visibility="{Binding IsDisplayFPS, Converter={StaticResource BoolToVisibilityConverter}}" />
        <ScrollBar
            Grid.Column="1"
            Maximum="{Binding TotalDurationHeight}"
            Minimum="0"
            Orientation="Vertical"
            Value="{Binding ReverseScrollViewerVerticalOffset}">
        </ScrollBar>
        <ScrollBar
            Grid.Row="1"
            Maximum="600"
            Minimum="-600"
            Orientation="Horizontal"
            Visibility="{Binding Setting.ShowXOffsetScrollBar, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static sys:Boolean.TrueString}}"
            Value="{Binding Setting.XOffset, Mode=TwoWay}">
        </ScrollBar>
        <StackPanel
            Margin="0,0,0,50"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            IsHitTestVisible="False"
            Orientation="Horizontal">
            <controls1:Toast x:Name="mainToast">

            </controls1:Toast>
        </StackPanel>
    </Grid>
</UserControl>
